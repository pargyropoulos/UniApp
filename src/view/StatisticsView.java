package view;

import constants.ColorConstants;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableCellRenderer;

import javax.swing.table.TableCellRenderer;
import model.StatisticsModel;
import utils.ICustomEventListener;
import utils.PDFExporter;

import static view.Utils.customizeButtonsInsidePanel;

/**
 *
 * @author Panagiotis Argyropoulos - pargyropoulos@gmail.com or std154845@ac.eap.gr
 */
public class StatisticsView extends javax.swing.JPanel {

    /** Creates new form StatisticsView */
    public StatisticsView() {
        initComponents();
        customizeButtonsInsidePanel(this.mainPanel);
    }
    
    public void addCloseButtonListener(ActionListener listener) {
        closeBtn.addActionListener(listener);
    }    

    public void addGraphEventListener(ActionListener listener){
        chartBtn.addActionListener(listener);   
    }
    
    public void setGridModel(StatisticsModel model){
        this.grid.setModel(model);
        this.customizeGrid();
    }

    private void customizeGrid(){      
        grid.getTableHeader().setPreferredSize(new Dimension(grid.getWidth(), 32)); // Set height to 30
        grid.getTableHeader().setBackground(ColorConstants.gridHeaderBackgroundColor); // Set background color
        grid.getTableHeader().setForeground(ColorConstants.gridHeaderForegroundColor); // Set text color to white for contrast    
        grid.setIntercellSpacing(new Dimension(0, 0));
        grid.getTableHeader().setResizingAllowed(true);
        grid.enableInputMethods(false);
        
        // Center-align the "Visits" column
        TableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        ((DefaultTableCellRenderer) centerRenderer).setHorizontalAlignment(JLabel.CENTER);
        grid.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();
        chartBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        closeBtn.setBackground(new java.awt.Color(45, 45, 48));
        closeBtn.setForeground(new java.awt.Color(255, 255, 255));
        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/cancel.png"))); // NOI18N
        closeBtn.setText("Close");
        closeBtn.setAlignmentY(0.0F);
        closeBtn.setFocusPainted(false);
        closeBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        closeBtn.setIconTextGap(32);
        closeBtn.setInheritsPopupMenu(true);
        closeBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        closeBtn.setMaximumSize(new java.awt.Dimension(200, 50));
        closeBtn.setMinimumSize(new java.awt.Dimension(200, 50));
        closeBtn.setPreferredSize(new java.awt.Dimension(200, 50));

        exportBtn.setBackground(new java.awt.Color(45, 45, 48));
        exportBtn.setForeground(new java.awt.Color(255, 255, 255));
        exportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/pdf.png"))); // NOI18N
        exportBtn.setText("PDF Export");
        exportBtn.setToolTipText("");
        exportBtn.setActionCommand("Export");
        exportBtn.setAlignmentY(0.0F);
        exportBtn.setFocusPainted(false);
        exportBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        exportBtn.setIconTextGap(32);
        exportBtn.setInheritsPopupMenu(true);
        exportBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        exportBtn.setMaximumSize(new java.awt.Dimension(200, 50));
        exportBtn.setMinimumSize(new java.awt.Dimension(200, 50));
        exportBtn.setPreferredSize(new java.awt.Dimension(200, 50));
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        grid.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        grid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Universities", "Views"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grid.setAlignmentX(0.0F);
        grid.setAlignmentY(0.0F);
        grid.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        grid.setFillsViewportHeight(true);
        grid.setFocusable(false);
        grid.setMinimumSize(new java.awt.Dimension(400, 600));
        grid.setRowHeight(32);
        grid.setSelectionBackground(new java.awt.Color(0, 120, 215));
        grid.setSelectionForeground(new java.awt.Color(255, 255, 255));
        grid.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        grid.setShowGrid(false);
        grid.getTableHeader().setResizingAllowed(false);
        grid.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(grid);

        chartBtn.setBackground(new java.awt.Color(45, 45, 48));
        chartBtn.setForeground(new java.awt.Color(255, 255, 255));
        chartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/stats.png"))); // NOI18N
        chartBtn.setText("Diagram");
        chartBtn.setToolTipText("");
        chartBtn.setActionCommand("Export");
        chartBtn.setAlignmentY(0.0F);
        chartBtn.setFocusPainted(false);
        chartBtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        chartBtn.setIconTextGap(32);
        chartBtn.setInheritsPopupMenu(true);
        chartBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        chartBtn.setMaximumSize(new java.awt.Dimension(200, 50));
        chartBtn.setMinimumSize(new java.awt.Dimension(200, 50));
        chartBtn.setPreferredSize(new java.awt.Dimension(200, 50));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(mainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        // TODO add your handling code here:
       // Δημιουργία JFileChooser για επιλογή διαδρομής
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setDialogTitle("Save PDF");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("PDF Documents", "pdf"));

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();

            // Αν δεν έχει κατάληξη .pdf, προσθέτουμε
            if (!filePath.toLowerCase().endsWith(".pdf")) {
                filePath += ".pdf";
            }

            // Κλήση της μεθόδου εξαγωγής σε PDF
            PDFExporter.exportToPDF(grid, filePath);
            javax.swing.JOptionPane.showMessageDialog(this, "PDF saved successfully!", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_exportBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chartBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton exportBtn;
    private javax.swing.JTable grid;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables

    public void showChart(StatisticsModel model) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

}
